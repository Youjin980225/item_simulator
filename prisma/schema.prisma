// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  //output   = "node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//계정 테이블
model User {
  userId Int @id @default(autoincrement()) @map("userId")
  id String @unique @map("id")
  email String @unique @map("email")
  password String @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfo UserInfo?
  avatar Avatar[]

  @@map("User")
}

//계정정보 테이블
model UserInfo {
  userInfoId Int @id @default(autoincrement()) @map("userInfoId")
  userId Int @unique @map("userId")
  name String @map("userName")
  age Int @map("userAge")
  gender String @map("gender")
  profileImage String? @map("profileImage")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user User @relation(fields:[userId], references:[userId], onDelete:Cascade)

  @@map("UserInfo")
}

//캐릭터 테이블
model Avatar {
  avatarId Int @id @default(autoincrement()) @map("avatarId")
  userId Int @map("userId")
  avatarName String @unique @map("avatarName")
  avatarLevel Int @map("avatarLevel")
  avatarExp Int @map("avatarExp")
  health Int @map("health")
  power Int @map("power")
  money Int @map("money")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user User @relation(fields:[userId], references:[userId], onDelete:Cascade)

  inventory Inventory[]
  equippedItem EquippedItem[]

  @@map("Avatar")
}

//아이템 테이블
model Item {
  itemId Int @id @default(autoincrement()) @map("itemId")
  itemCode Int @unique @map("itemCode")
  itemName String @unique @map("itemName")
  itemPrice Int @map("itemPrice")
  itemHealth Int @map("itemHealth")
  itemPower Int @map("itemPower")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  inventory Inventory[]
  equippedItem EquippedItem[]

  @@map("Item")
}

//인벤토리 테이블
model Inventory {
  inventoryId Int @id @default(autoincrement()) @map("inventoryId")
  avatarId Int @map("avatarId")
  itemId Int @map("itemId")

  avatar Avatar @relation(fields:[avatarId], references:[avatarId], onDelete:Cascade)
  item Item @relation(fields:[itemId], references:[itemId], onDelete:Cascade)

  @@map("Inventory")
}

//장착아이템 테이블
model EquippedItem {
  equippedItemId Int @id @default(autoincrement()) @map("equippedItemId")
  avatarId Int @map("avatarId")
  itemId Int @map("itemId")
  isEquipped Boolean @default(false)

  avatar Avatar @relation(fields:[avatarId], references:[avatarId], onDelete:Cascade)
  item Item @relation(fields:[itemId], references:[itemId], onDelete:Cascade)

  @@map("EquippedItem")
}